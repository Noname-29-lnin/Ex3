var g_data = {"name":"/home/noname/Documents/project_tiny/Ex3/02_rtl/Question6/Bitonic_Sort.sv","src":"module Bitonic_Sort #(\n    parameter IS_ASC    = 1,\n    parameter NUM_ELEM  = 8,\n    parameter SIZE_DATA = 8\n)(\n    input  logic [(NUM_ELEM*SIZE_DATA)-1:0] i_data  ,\n    output logic [(NUM_ELEM*SIZE_DATA)-1:0] o_sorted\n);\n\n    // Split flat bus into array\n    wire [SIZE_DATA-1:0] w_i_data [0:NUM_ELEM-1];\n    wire [SIZE_DATA-1:0] w_0_data [0:NUM_ELEM-1];\n    wire [SIZE_DATA-1:0] w_sorted [0:NUM_ELEM-1];\n\n    genvar i;\n    generate\n        for (i = 0; i < NUM_ELEM; i++) begin : UNPACK_INPUT\n            assign w_i_data[i] = i_data[i*SIZE_DATA +: SIZE_DATA];\n        end\n    endgenerate\n\n    Bitonic_Block4 #(\n        .IS_ASC         (IS_ASC),\n        .SIZE_DATA      (SIZE_DATA)\n    ) BN_4_UNIT_0 (\n        .i_data_0       (w_i_data[0]),\n        .i_data_1       (w_i_data[1]),\n        .i_data_2       (w_i_data[2]),\n        .i_data_3       (w_i_data[3]),\n\n        .o_data_0       (w_0_data[0]),\n        .o_data_1       (w_0_data[1]),\n        .o_data_2       (w_0_data[2]),\n        .o_data_3       (w_0_data[3]) \n    );\n    Bitonic_Block4 #(\n        .IS_ASC         (IS_ASC),\n        .SIZE_DATA      (SIZE_DATA)\n    ) BN_4_UNIT_1 (\n        .i_data_0       (w_i_data[4]),\n        .i_data_1       (w_i_data[5]),\n        .i_data_2       (w_i_data[6]),\n        .i_data_3       (w_i_data[7]),\n\n        .o_data_0       (w_0_data[4]),\n        .o_data_1       (w_0_data[5]),\n        .o_data_2       (w_0_data[6]),\n        .o_data_3       (w_0_data[7]) \n    );\n\n    Bitonic_Block8 #(\n        .IS_ASC         (IS_ASC),\n        .SIZE_DATA      (SIZE_DATA)\n    ) BN_8_UNIT_0 (\n        .i_data_0       (w_0_data[0]),\n        .i_data_1       (w_0_data[4]),\n        .i_data_2       (w_0_data[1]),\n        .i_data_3       (w_0_data[5]),\n        .i_data_4       (w_0_data[2]),\n        .i_data_5       (w_0_data[6]),\n        .i_data_6       (w_0_data[3]),\n        .i_data_7       (w_0_data[7]),\n\n        .o_data_0       (w_sorted[0]),\n        .o_data_1       (w_sorted[1]),\n        .o_data_2       (w_sorted[2]),\n        .o_data_3       (w_sorted[3]),\n        .o_data_4       (w_sorted[4]),\n        .o_data_5       (w_sorted[5]),\n        .o_data_6       (w_sorted[6]),\n        .o_data_7       (w_sorted[7])      \n    );\n\n    generate\n        for (i = 0; i < NUM_ELEM; i++) begin : PACK_OUTPUT\n            assign o_sorted[i*SIZE_DATA +: SIZE_DATA] = w_sorted[i];\n        end\n    endgenerate\n\nendmodule\n","lang":"verilog"};
processSrcData(g_data);